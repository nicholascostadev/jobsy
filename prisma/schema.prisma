// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id             String        @id @unique
  name           String
  username       String        @unique
  email          String        @unique
  bio            String?
  thumbnailColor String        @default("purple")
  auth_session   AuthSession[]
  auth_key       AuthKey[]
  // here you can add custom fields for your user
  // e.g. name, email, username, roles, etc.
  JobPost        JobPost[]
  Applicant      Applicant[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Applicant {
  id           String   @id @unique @default(uuid())
  job_post_id  String
  name         String
  username     String
  email        String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  auth_user_id String

  user     AuthUser @relation(fields: [auth_user_id], references: [id])
  job_post JobPost  @relation(fields: [job_post_id], references: [id])

  @@unique([job_post_id, auth_user_id])
}

model JobPost {
  id           String      @id @unique @default(uuid())
  title        String
  description  String
  job_title    String
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  salary_start Int?
  salary_end   Int?
  author       AuthUser    @relation(fields: [auth_user_id], references: [id])
  auth_user_id String
  applicants   Applicant[]
}
